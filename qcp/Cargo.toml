[package]
name = "qcp"
description = "Secure remote file copy utility which uses the QUIC protocol over UDP"
rust-version = "1.85.0"
version = "0.4.2"
edition.workspace = true
authors = ["Ross Younger <qcp@crazyscot.com>"]
license = "AGPL-3.0-or-later"
repository = "https://github.com/crazyscot/qcp/"
homepage = "https://github.com/crazyscot/qcp/"
keywords = ["networking", "file-transfer", "quic"]
categories = ["command-line-utilities"]
readme = "../README.md"

[features]
default = ["rustls-log", "secure-alloc"]
## Enables rustls debug messages. You still have to request them using the environment variable, e.g. `RUST_LOG="rustls=debug"`.
rustls-log = ["quinn/rustls-log"]
## Selects secure mode for memory allocations.
## This protects against various heap vulnerabilities, though comes at a performance cost.
## Extremely high bandwidth environments may wish to experiment with this for performance.
secure-alloc = ["mimalloc/secure"]
## Builds test helpers. This is intended only for use by qcp-unsafe-tests.
unstable-test-helpers = []

[dependencies]
anstream = { workspace = true }
anstyle = { workspace = true }
anyhow = { workspace = true }
async-trait = "0.1.88"
bytes = "1.10.1"
cfg-if = { workspace = true }
clap = { workspace = true }
colorchoice = { workspace = true }
console = { workspace = true }
derive-deftly = "1.2.0"
derive_more = { version = "2.0.1", features = [
    "constructor",
    "debug",
    "deref",
    "display",
    "from",
    "from_str",
] }
dirs = "6.0.0"
document-features = "0.2.11"
dtype_variant = "=0.0.14"
either = "1.15.0"
engineering-repr = { version = "1.1.0", features = ["serde"] }
figment = { version = "0.10.19", features = ["env"] }
futures-util = { version = "0.3.31", default-features = false }
gethostname = "1.0.2"
glob = "0.3.3"
heck = "0.5.0"
hex = "0.4.3"
homedir = "=0.3.4"
human-repr = "1.1.0"
indicatif = { version = "0.18.0", features = ["tokio"] }
int-enum = "1.2.0"
lessify = "0.5.0"
mimalloc = "0.1.47"
num-format = { version = "0.4.4" }
num-traits = "0.2.19"
paste = "1.0.15"
quinn = { version = "0.11.8", default-features = false, features = [
    "runtime-tokio",
    "rustls",
    "ring",
] }
rcgen = { version = "0.14.3" }
rustix = { version = "1.0.8", features = ["net", "fs", "process"] }
rustls-pki-types = "1.12.0"
serde = { version = "1.0.219", features = ["derive"] }
serde_bare = "0.5.0"
serde_repr = "0.1.20"
static_assertions = "1.1.0"
struct-field-names-as-array = "0.3.0"
strum = { version = "0.27.2", features = ["derive"] }
strum_macros = "0.27.2"
tabled = "0.20.0"
thiserror = "2.0.14"
tokio = { workspace = true }
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["env-filter", "chrono"] }
wildmatch = "2.4.0"

[target.'cfg(unix)'.dependencies]
file-mode = "0.1.2"

[dev-dependencies]
assertables = "9.8.2"
clap_mangen = "0.2.29"
json = "0.12.4"
littertray = { workspace = true, features = ["async"] }
mockall = "0.13.1"
pretty_assertions = "1.4.1"
roff = "0.2.2"
rusty-fork = { workspace = true }
serde_json = "1.0.142"
serde_test = "1.0.177"
tempfile = { workspace = true }
tokio-test = "0.4.4"

[lints.rust]
dead_code = "warn"
elided_lifetimes_in_paths = "deny"
meta_variable_misuse = "deny"
missing_abi = "deny"
missing_copy_implementations = "deny"
missing_debug_implementations = "deny"
missing_docs = "warn"
non_ascii_idents = "deny"
single_use_lifetimes = "deny"
trivial_casts = "deny"
trivial_numeric_casts = "deny"
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(coverage_nightly)'] }
unsafe_code = "forbid"
unsafe_op_in_unsafe_fn = "deny"
unreachable_pub = "deny"
# unused_crate_dependencies = "deny" # false positives
unused_extern_crates = "deny"
unused_lifetimes = "deny"
unused_results = "deny"
variant_size_differences = "deny"

[lints.clippy]
pedantic = { level = "deny", priority = -1 }
missing_errors_doc = "allow"

[lints.rustdoc]
bare_urls = "deny"
broken_intra_doc_links = "deny"
invalid_codeblock_attributes = "deny"
invalid_html_tags = "deny"
invalid_rust_codeblocks = "deny"
missing_crate_level_docs = "deny"
private_intra_doc_links = "deny"
unescaped_backticks = "deny"

[build-dependencies]
cfg_aliases = "0.2.1"

[package.metadata.cross.target.x86_64-unknown-linux-musl]
#pre-build = [ "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install ..." ]
[package.metadata.cross.target.aarch64-unknown-linux-musl]
#pre-build = [ "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install ..." ]

[package.metadata.deb]
extended-description = """\
The QUIC Copier (`qcp`) is an experimental high-performance remote file
copy utility for long-distance internet connections.

It is intended as a drop-in replacement for scp, offering similar
security properties but better throughput on congested networks.
"""
section = "contrib/net"
assets = [
    # sneaky; this seems to automagically pick up the correct binary when cross building:
    [
        "target/release/qcp",
        "usr/bin/",
        "755",
    ],

    [
        "../README.md",
        "usr/share/doc/qcp/",
        "644",
    ],
    [
        "../LICENSE",
        "usr/share/doc/qcp/",
        "644",
    ],
    # gzip -9n < CHANGELOG.md > misc/changelog.gz # done by make-debian-package
    [
        "misc/changelog.gz",
        "usr/share/doc/qcp/",
        "644",
    ],
    # gzip -9n < debian/changelog > debian/changelog.Debian.gz # done by make-debian-package
    [
        "debian/changelog.Debian.gz",
        "usr/share/doc/qcp/",
        "644",
    ],
    [
        "misc/20-qcp.conf",
        "etc/sysctl.d/",
        "644",
    ], # this is automatically recognised as a conffile
    [
        "misc/qcp.1",
        "usr/share/man/man1/",
        "644",
    ],
    [
        "misc/qcp_config.5",
        "usr/share/man/man5/",
        "644",
    ],
    [
        "misc/qcp.conf",
        "etc/",
        "644",
    ], # this is automatically recognised as a conffile
    [
        "misc/qcp_sshd.conf",
        "etc/ssh/sshd_config.d/",
        "644",
    ], # this is automatically recognised as a conffile
    # gzip -9n < qcp/qcp.cdx.xml > qcp/qcp.cdx.xml.gz # done by make-debian-package
    [
        "qcp.cdx.xml.gz",
        "usr/share/doc/qcp/",
        "644",
    ],
]
maintainer-scripts = "debian"
depends = "$auto,debconf"
