name: CI

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  # Build the app on all supported platforms
  build:
    strategy:
      matrix:
        platform: [ubuntu-22.04]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v4
    - name: Set minimal profile (Windows only)
      if: matrix.platform == 'windows-latest'
      run: rustup set profile minimal
    - uses: Swatinem/rust-cache@v2
      with:
        key: "${{matrix.platform}}"
    - name: install packages (ubuntu)
      if: matrix.platform == 'ubuntu-22.04'
      run: sudo apt-get update && sudo apt-get -y --no-install-recommends install mold
    - name: Build
      run: cargo build --locked

  # We only need to run the checks on a single platform
  checks:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          key: ubuntu-22.04
      - name: install packages
        run: sudo apt-get update && sudo apt-get -y --no-install-recommends install mold
      # Checks begin here!
      - run: cargo fmt --all -- --check
      - run: cargo test --locked
      - run: cargo clippy --locked --all-targets
      # We care that the benchmarks build and run, not about their numeric output.
      # To keep the CI a bit leaner, do this in the dev profile.
      - run: cargo build --locked --all-targets
